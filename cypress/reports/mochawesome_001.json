{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2022-06-23T12:53:49.055Z",
    "end": "2022-06-23T12:54:01.668Z",
    "duration": 12613,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "be5b8a86-1bdb-4070-999c-8577d092920a",
      "title": "",
      "fullFile": "cypress/integration/book_store/order_fiction_book.spec.js",
      "file": "cypress/integration/book_store/order_fiction_book.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09189c75-a4e9-4556-9f5a-a26c2f2ec06e",
          "title": "Order Fiction book",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Order Harry Potter in fiction books for 35.8",
              "fullTitle": "Order Fiction book Order Harry Potter in fiction books for 35.8",
              "timedOut": null,
              "duration": 8354,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('@locator').then(locator => {\n  cy.OrderBook(`${testCase.book_name}`, `${testCase.units}`, `${testCase.price}`);\n  cy.checkOrder(locator.bookName, `${testCase.book_name}`);\n  cy.checkOrder(locator.bookUnit, `${testCase.units}`);\n  cy.checkPrices(locator.bookPrice, `${testCase.price}`);\n  let price = `${testCase.price}` * `${testCase.units}`;\n  cy.checkPrices(locator.totalPrice, price);\n  let discount_price = price * (`${testCase.discount}` / 100);\n  cy.checkPrices(locator.discountPrice, discount_price.toFixed(2));\n  let total_price = price - discount_price;\n  cy.checkPrices(locator.finalPrice, total_price.toFixed(2));\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `td:nth-child(2)`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `td:nth-child(2)`, but never found it.\n    at Context.eval (https://react.simprocloud.com/__cypress/tests?p=cypress\\support\\index.js:157:10)",
                "diff": null
              },
              "uuid": "4f878a3c-860e-4894-8e7b-ffe5c027021b",
              "parentUUID": "09189c75-a4e9-4556-9f5a-a26c2f2ec06e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4f878a3c-860e-4894-8e7b-ffe5c027021b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8354,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ffdeaf19-1289-49f8-ac4e-649a65e72b7e",
          "title": "Order Fiction book",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Order Harry Potter in fiction books for 35",
              "fullTitle": "Order Fiction book Order Harry Potter in fiction books for 35",
              "timedOut": null,
              "duration": 4050,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@locator').then(locator => {\n  cy.OrderBook(`${testCase.book_name}`, `${testCase.units}`, `${testCase.price}`);\n  cy.checkOrder(locator.bookName, `${testCase.book_name}`);\n  cy.checkOrder(locator.bookUnit, `${testCase.units}`);\n  cy.checkPrices(locator.bookPrice, `${testCase.price}`);\n  let price = `${testCase.price}` * `${testCase.units}`;\n  cy.checkPrices(locator.totalPrice, price);\n  let discount_price = price * (`${testCase.discount}` / 100);\n  cy.checkPrices(locator.discountPrice, discount_price.toFixed(2));\n  let total_price = price - discount_price;\n  cy.checkPrices(locator.finalPrice, total_price.toFixed(2));\n});",
              "err": {},
              "uuid": "54cb14eb-701d-4e7d-a567-727d8defd435",
              "parentUUID": "ffdeaf19-1289-49f8-ac4e-649a65e72b7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54cb14eb-701d-4e7d-a567-727d8defd435"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4050,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}